version: '3.8'

services:
  # Python Processing Service with Docling + pandas
  python-service:
    build:
      context: ./python-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - MAX_FILE_SIZE_MB=20
      - DEFAULT_CURRENCY=EUR
      - DEFAULT_LOCALE=de_DE
      - PANDAS_BACKEND=pyarrow
      - DOCLING_PARALLEL_PROCESSING=true
    volumes:
      - ./python-service:/app
      - python_service_logs:/app/logs
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Redis for caching (if needed for performance)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - python-service
    restart: unless-stopped
    profiles:
      - production

volumes:
  python_service_logs:
  redis_data:

networks:
  default:
    name: docling-pandas-network